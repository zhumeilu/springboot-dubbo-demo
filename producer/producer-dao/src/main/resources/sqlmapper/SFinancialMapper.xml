<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zml.demo.producer.dao.mapper.SFinancialMapper">
  <resultMap id="BaseResultMap" type="com.zml.demo.producer.dao.model.SFinancial">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="receivable_order_count" jdbcType="VARCHAR" property="receivableOrderCount" />
    <result column="receivable_principal" jdbcType="VARCHAR" property="receivablePrincipal" />
    <result column="receivable_credit_cost" jdbcType="VARCHAR" property="receivableCreditCost" />
    <result column="receivable_interest" jdbcType="VARCHAR" property="receivableInterest" />
    <result column="receivable_interest_penalty" jdbcType="VARCHAR" property="receivableInterestPenalty" />
    <result column="payable_order_count" jdbcType="VARCHAR" property="payableOrderCount" />
    <result column="payable_principal" jdbcType="VARCHAR" property="payablePrincipal" />
    <result column="payable_credit_cost" jdbcType="VARCHAR" property="payableCreditCost" />
    <result column="receipts_order_count" jdbcType="VARCHAR" property="receiptsOrderCount" />
    <result column="receipts_principal" jdbcType="VARCHAR" property="receiptsPrincipal" />
    <result column="receipts_credit_cost" jdbcType="VARCHAR" property="receiptsCreditCost" />
    <result column="receipts_interest" jdbcType="VARCHAR" property="receiptsInterest" />
    <result column="receipts_interest_penalty" jdbcType="VARCHAR" property="receiptsInterestPenalty" />
    <result column="payment_order_count" jdbcType="VARCHAR" property="paymentOrderCount" />
    <result column="payment_principal" jdbcType="VARCHAR" property="paymentPrincipal" />
    <result column="payment_credit_cost" jdbcType="VARCHAR" property="paymentCreditCost" />
    <result column="overdue_order_count" jdbcType="VARCHAR" property="overdueOrderCount" />
    <result column="overdue_principal" jdbcType="VARCHAR" property="overduePrincipal" />
    <result column="overdue_credit_cost" jdbcType="VARCHAR" property="overdueCreditCost" />
    <result column="overdue_interest" jdbcType="VARCHAR" property="overdueInterest" />
    <result column="overdue_interest_penalty" jdbcType="VARCHAR" property="overdueInterestPenalty" />
    <result column="unexpired_order_count" jdbcType="VARCHAR" property="unexpiredOrderCount" />
    <result column="unexpired_principal" jdbcType="VARCHAR" property="unexpiredPrincipal" />
    <result column="unexpired_credit_cost" jdbcType="VARCHAR" property="unexpiredCreditCost" />
    <result column="unexpired_interest" jdbcType="VARCHAR" property="unexpiredInterest" />
    <result column="balance_amount" jdbcType="VARCHAR" property="balanceAmount" />
    <result column="rollover_number" jdbcType="VARCHAR" property="rolloverNumber" />
    <result column="rollover_fee" jdbcType="VARCHAR" property="rolloverFee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ctime, utime, date, receivable_order_count, receivable_principal, receivable_credit_cost, 
    receivable_interest, receivable_interest_penalty, payable_order_count, payable_principal, 
    payable_credit_cost, receipts_order_count, receipts_principal, receipts_credit_cost, 
    receipts_interest, receipts_interest_penalty, payment_order_count, payment_principal, 
    payment_credit_cost, overdue_order_count, overdue_principal, overdue_credit_cost, 
    overdue_interest, overdue_interest_penalty, unexpired_order_count, unexpired_principal, 
    unexpired_credit_cost, unexpired_interest, balance_amount, rollover_number, rollover_fee
  </sql>
  <select id="selectByExample" parameterType="com.zml.demo.producer.dao.model.SFinancialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_financial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_financial
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_financial
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zml.demo.producer.dao.model.SFinancialExample">
    delete from s_financial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    insert into s_financial (id, ctime, utime, 
      date, receivable_order_count, receivable_principal, 
      receivable_credit_cost, receivable_interest, 
      receivable_interest_penalty, payable_order_count, 
      payable_principal, payable_credit_cost, receipts_order_count, 
      receipts_principal, receipts_credit_cost, 
      receipts_interest, receipts_interest_penalty, 
      payment_order_count, payment_principal, payment_credit_cost, 
      overdue_order_count, overdue_principal, overdue_credit_cost, 
      overdue_interest, overdue_interest_penalty, 
      unexpired_order_count, unexpired_principal, 
      unexpired_credit_cost, unexpired_interest, 
      balance_amount, rollover_number, rollover_fee
      )
    values (#{id,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP}, 
      #{date,jdbcType=VARCHAR}, #{receivableOrderCount,jdbcType=VARCHAR}, #{receivablePrincipal,jdbcType=VARCHAR}, 
      #{receivableCreditCost,jdbcType=VARCHAR}, #{receivableInterest,jdbcType=VARCHAR}, 
      #{receivableInterestPenalty,jdbcType=VARCHAR}, #{payableOrderCount,jdbcType=VARCHAR}, 
      #{payablePrincipal,jdbcType=VARCHAR}, #{payableCreditCost,jdbcType=VARCHAR}, #{receiptsOrderCount,jdbcType=VARCHAR}, 
      #{receiptsPrincipal,jdbcType=VARCHAR}, #{receiptsCreditCost,jdbcType=VARCHAR}, 
      #{receiptsInterest,jdbcType=VARCHAR}, #{receiptsInterestPenalty,jdbcType=VARCHAR}, 
      #{paymentOrderCount,jdbcType=VARCHAR}, #{paymentPrincipal,jdbcType=VARCHAR}, #{paymentCreditCost,jdbcType=VARCHAR}, 
      #{overdueOrderCount,jdbcType=VARCHAR}, #{overduePrincipal,jdbcType=VARCHAR}, #{overdueCreditCost,jdbcType=VARCHAR}, 
      #{overdueInterest,jdbcType=VARCHAR}, #{overdueInterestPenalty,jdbcType=VARCHAR}, 
      #{unexpiredOrderCount,jdbcType=VARCHAR}, #{unexpiredPrincipal,jdbcType=VARCHAR}, 
      #{unexpiredCreditCost,jdbcType=VARCHAR}, #{unexpiredInterest,jdbcType=VARCHAR}, 
      #{balanceAmount,jdbcType=VARCHAR}, #{rolloverNumber,jdbcType=VARCHAR}, #{rolloverFee,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    insert into s_financial
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="receivableOrderCount != null">
        receivable_order_count,
      </if>
      <if test="receivablePrincipal != null">
        receivable_principal,
      </if>
      <if test="receivableCreditCost != null">
        receivable_credit_cost,
      </if>
      <if test="receivableInterest != null">
        receivable_interest,
      </if>
      <if test="receivableInterestPenalty != null">
        receivable_interest_penalty,
      </if>
      <if test="payableOrderCount != null">
        payable_order_count,
      </if>
      <if test="payablePrincipal != null">
        payable_principal,
      </if>
      <if test="payableCreditCost != null">
        payable_credit_cost,
      </if>
      <if test="receiptsOrderCount != null">
        receipts_order_count,
      </if>
      <if test="receiptsPrincipal != null">
        receipts_principal,
      </if>
      <if test="receiptsCreditCost != null">
        receipts_credit_cost,
      </if>
      <if test="receiptsInterest != null">
        receipts_interest,
      </if>
      <if test="receiptsInterestPenalty != null">
        receipts_interest_penalty,
      </if>
      <if test="paymentOrderCount != null">
        payment_order_count,
      </if>
      <if test="paymentPrincipal != null">
        payment_principal,
      </if>
      <if test="paymentCreditCost != null">
        payment_credit_cost,
      </if>
      <if test="overdueOrderCount != null">
        overdue_order_count,
      </if>
      <if test="overduePrincipal != null">
        overdue_principal,
      </if>
      <if test="overdueCreditCost != null">
        overdue_credit_cost,
      </if>
      <if test="overdueInterest != null">
        overdue_interest,
      </if>
      <if test="overdueInterestPenalty != null">
        overdue_interest_penalty,
      </if>
      <if test="unexpiredOrderCount != null">
        unexpired_order_count,
      </if>
      <if test="unexpiredPrincipal != null">
        unexpired_principal,
      </if>
      <if test="unexpiredCreditCost != null">
        unexpired_credit_cost,
      </if>
      <if test="unexpiredInterest != null">
        unexpired_interest,
      </if>
      <if test="balanceAmount != null">
        balance_amount,
      </if>
      <if test="rolloverNumber != null">
        rollover_number,
      </if>
      <if test="rolloverFee != null">
        rollover_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="receivableOrderCount != null">
        #{receivableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="receivablePrincipal != null">
        #{receivablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="receivableCreditCost != null">
        #{receivableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receivableInterest != null">
        #{receivableInterest,jdbcType=VARCHAR},
      </if>
      <if test="receivableInterestPenalty != null">
        #{receivableInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="payableOrderCount != null">
        #{payableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="payablePrincipal != null">
        #{payablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="payableCreditCost != null">
        #{payableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsOrderCount != null">
        #{receiptsOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="receiptsPrincipal != null">
        #{receiptsPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="receiptsCreditCost != null">
        #{receiptsCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterest != null">
        #{receiptsInterest,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterestPenalty != null">
        #{receiptsInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderCount != null">
        #{paymentOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="paymentPrincipal != null">
        #{paymentPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="paymentCreditCost != null">
        #{paymentCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="overdueOrderCount != null">
        #{overdueOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="overduePrincipal != null">
        #{overduePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="overdueCreditCost != null">
        #{overdueCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="overdueInterest != null">
        #{overdueInterest,jdbcType=VARCHAR},
      </if>
      <if test="overdueInterestPenalty != null">
        #{overdueInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredOrderCount != null">
        #{unexpiredOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredPrincipal != null">
        #{unexpiredPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredCreditCost != null">
        #{unexpiredCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredInterest != null">
        #{unexpiredInterest,jdbcType=VARCHAR},
      </if>
      <if test="balanceAmount != null">
        #{balanceAmount,jdbcType=VARCHAR},
      </if>
      <if test="rolloverNumber != null">
        #{rolloverNumber,jdbcType=VARCHAR},
      </if>
      <if test="rolloverFee != null">
        #{rolloverFee,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zml.demo.producer.dao.model.SFinancialExample" resultType="java.lang.Long">
    select count(*) from s_financial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_financial
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.receivableOrderCount != null">
        receivable_order_count = #{record.receivableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.receivablePrincipal != null">
        receivable_principal = #{record.receivablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.receivableCreditCost != null">
        receivable_credit_cost = #{record.receivableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.receivableInterest != null">
        receivable_interest = #{record.receivableInterest,jdbcType=VARCHAR},
      </if>
      <if test="record.receivableInterestPenalty != null">
        receivable_interest_penalty = #{record.receivableInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="record.payableOrderCount != null">
        payable_order_count = #{record.payableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.payablePrincipal != null">
        payable_principal = #{record.payablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.payableCreditCost != null">
        payable_credit_cost = #{record.payableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsOrderCount != null">
        receipts_order_count = #{record.receiptsOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsPrincipal != null">
        receipts_principal = #{record.receiptsPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsCreditCost != null">
        receipts_credit_cost = #{record.receiptsCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsInterest != null">
        receipts_interest = #{record.receiptsInterest,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsInterestPenalty != null">
        receipts_interest_penalty = #{record.receiptsInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentOrderCount != null">
        payment_order_count = #{record.paymentOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentPrincipal != null">
        payment_principal = #{record.paymentPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCreditCost != null">
        payment_credit_cost = #{record.paymentCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.overdueOrderCount != null">
        overdue_order_count = #{record.overdueOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.overduePrincipal != null">
        overdue_principal = #{record.overduePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.overdueCreditCost != null">
        overdue_credit_cost = #{record.overdueCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.overdueInterest != null">
        overdue_interest = #{record.overdueInterest,jdbcType=VARCHAR},
      </if>
      <if test="record.overdueInterestPenalty != null">
        overdue_interest_penalty = #{record.overdueInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="record.unexpiredOrderCount != null">
        unexpired_order_count = #{record.unexpiredOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.unexpiredPrincipal != null">
        unexpired_principal = #{record.unexpiredPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.unexpiredCreditCost != null">
        unexpired_credit_cost = #{record.unexpiredCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.unexpiredInterest != null">
        unexpired_interest = #{record.unexpiredInterest,jdbcType=VARCHAR},
      </if>
      <if test="record.balanceAmount != null">
        balance_amount = #{record.balanceAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.rolloverNumber != null">
        rollover_number = #{record.rolloverNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.rolloverFee != null">
        rollover_fee = #{record.rolloverFee,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_financial
    set id = #{record.id,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP},
      date = #{record.date,jdbcType=VARCHAR},
      receivable_order_count = #{record.receivableOrderCount,jdbcType=VARCHAR},
      receivable_principal = #{record.receivablePrincipal,jdbcType=VARCHAR},
      receivable_credit_cost = #{record.receivableCreditCost,jdbcType=VARCHAR},
      receivable_interest = #{record.receivableInterest,jdbcType=VARCHAR},
      receivable_interest_penalty = #{record.receivableInterestPenalty,jdbcType=VARCHAR},
      payable_order_count = #{record.payableOrderCount,jdbcType=VARCHAR},
      payable_principal = #{record.payablePrincipal,jdbcType=VARCHAR},
      payable_credit_cost = #{record.payableCreditCost,jdbcType=VARCHAR},
      receipts_order_count = #{record.receiptsOrderCount,jdbcType=VARCHAR},
      receipts_principal = #{record.receiptsPrincipal,jdbcType=VARCHAR},
      receipts_credit_cost = #{record.receiptsCreditCost,jdbcType=VARCHAR},
      receipts_interest = #{record.receiptsInterest,jdbcType=VARCHAR},
      receipts_interest_penalty = #{record.receiptsInterestPenalty,jdbcType=VARCHAR},
      payment_order_count = #{record.paymentOrderCount,jdbcType=VARCHAR},
      payment_principal = #{record.paymentPrincipal,jdbcType=VARCHAR},
      payment_credit_cost = #{record.paymentCreditCost,jdbcType=VARCHAR},
      overdue_order_count = #{record.overdueOrderCount,jdbcType=VARCHAR},
      overdue_principal = #{record.overduePrincipal,jdbcType=VARCHAR},
      overdue_credit_cost = #{record.overdueCreditCost,jdbcType=VARCHAR},
      overdue_interest = #{record.overdueInterest,jdbcType=VARCHAR},
      overdue_interest_penalty = #{record.overdueInterestPenalty,jdbcType=VARCHAR},
      unexpired_order_count = #{record.unexpiredOrderCount,jdbcType=VARCHAR},
      unexpired_principal = #{record.unexpiredPrincipal,jdbcType=VARCHAR},
      unexpired_credit_cost = #{record.unexpiredCreditCost,jdbcType=VARCHAR},
      unexpired_interest = #{record.unexpiredInterest,jdbcType=VARCHAR},
      balance_amount = #{record.balanceAmount,jdbcType=VARCHAR},
      rollover_number = #{record.rolloverNumber,jdbcType=VARCHAR},
      rollover_fee = #{record.rolloverFee,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    update s_financial
    <set>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="receivableOrderCount != null">
        receivable_order_count = #{receivableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="receivablePrincipal != null">
        receivable_principal = #{receivablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="receivableCreditCost != null">
        receivable_credit_cost = #{receivableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receivableInterest != null">
        receivable_interest = #{receivableInterest,jdbcType=VARCHAR},
      </if>
      <if test="receivableInterestPenalty != null">
        receivable_interest_penalty = #{receivableInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="payableOrderCount != null">
        payable_order_count = #{payableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="payablePrincipal != null">
        payable_principal = #{payablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="payableCreditCost != null">
        payable_credit_cost = #{payableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsOrderCount != null">
        receipts_order_count = #{receiptsOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="receiptsPrincipal != null">
        receipts_principal = #{receiptsPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="receiptsCreditCost != null">
        receipts_credit_cost = #{receiptsCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterest != null">
        receipts_interest = #{receiptsInterest,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterestPenalty != null">
        receipts_interest_penalty = #{receiptsInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderCount != null">
        payment_order_count = #{paymentOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="paymentPrincipal != null">
        payment_principal = #{paymentPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="paymentCreditCost != null">
        payment_credit_cost = #{paymentCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="overdueOrderCount != null">
        overdue_order_count = #{overdueOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="overduePrincipal != null">
        overdue_principal = #{overduePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="overdueCreditCost != null">
        overdue_credit_cost = #{overdueCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="overdueInterest != null">
        overdue_interest = #{overdueInterest,jdbcType=VARCHAR},
      </if>
      <if test="overdueInterestPenalty != null">
        overdue_interest_penalty = #{overdueInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredOrderCount != null">
        unexpired_order_count = #{unexpiredOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredPrincipal != null">
        unexpired_principal = #{unexpiredPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredCreditCost != null">
        unexpired_credit_cost = #{unexpiredCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="unexpiredInterest != null">
        unexpired_interest = #{unexpiredInterest,jdbcType=VARCHAR},
      </if>
      <if test="balanceAmount != null">
        balance_amount = #{balanceAmount,jdbcType=VARCHAR},
      </if>
      <if test="rolloverNumber != null">
        rollover_number = #{rolloverNumber,jdbcType=VARCHAR},
      </if>
      <if test="rolloverFee != null">
        rollover_fee = #{rolloverFee,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    update s_financial
    set ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP},
      date = #{date,jdbcType=VARCHAR},
      receivable_order_count = #{receivableOrderCount,jdbcType=VARCHAR},
      receivable_principal = #{receivablePrincipal,jdbcType=VARCHAR},
      receivable_credit_cost = #{receivableCreditCost,jdbcType=VARCHAR},
      receivable_interest = #{receivableInterest,jdbcType=VARCHAR},
      receivable_interest_penalty = #{receivableInterestPenalty,jdbcType=VARCHAR},
      payable_order_count = #{payableOrderCount,jdbcType=VARCHAR},
      payable_principal = #{payablePrincipal,jdbcType=VARCHAR},
      payable_credit_cost = #{payableCreditCost,jdbcType=VARCHAR},
      receipts_order_count = #{receiptsOrderCount,jdbcType=VARCHAR},
      receipts_principal = #{receiptsPrincipal,jdbcType=VARCHAR},
      receipts_credit_cost = #{receiptsCreditCost,jdbcType=VARCHAR},
      receipts_interest = #{receiptsInterest,jdbcType=VARCHAR},
      receipts_interest_penalty = #{receiptsInterestPenalty,jdbcType=VARCHAR},
      payment_order_count = #{paymentOrderCount,jdbcType=VARCHAR},
      payment_principal = #{paymentPrincipal,jdbcType=VARCHAR},
      payment_credit_cost = #{paymentCreditCost,jdbcType=VARCHAR},
      overdue_order_count = #{overdueOrderCount,jdbcType=VARCHAR},
      overdue_principal = #{overduePrincipal,jdbcType=VARCHAR},
      overdue_credit_cost = #{overdueCreditCost,jdbcType=VARCHAR},
      overdue_interest = #{overdueInterest,jdbcType=VARCHAR},
      overdue_interest_penalty = #{overdueInterestPenalty,jdbcType=VARCHAR},
      unexpired_order_count = #{unexpiredOrderCount,jdbcType=VARCHAR},
      unexpired_principal = #{unexpiredPrincipal,jdbcType=VARCHAR},
      unexpired_credit_cost = #{unexpiredCreditCost,jdbcType=VARCHAR},
      unexpired_interest = #{unexpiredInterest,jdbcType=VARCHAR},
      balance_amount = #{balanceAmount,jdbcType=VARCHAR},
      rollover_number = #{rolloverNumber,jdbcType=VARCHAR},
      rollover_fee = #{rolloverFee,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.zml.demo.producer.dao.model.SFinancial">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="payable_order_count" jdbcType="VARCHAR" property="payableOrderCount" />
    <result column="payable_loan_amount" jdbcType="VARCHAR" property="payableLoanAmount" />
    <result column="payable_principal" jdbcType="VARCHAR" property="payablePrincipal" />
    <result column="payable_credit_cost" jdbcType="VARCHAR" property="payableCreditCost" />
    <result column="receipts_order_count" jdbcType="VARCHAR" property="receiptsOrderCount" />
    <result column="receipts_principal" jdbcType="VARCHAR" property="receiptsPrincipal" />
    <result column="receipts_credit_cost" jdbcType="VARCHAR" property="receiptsCreditCost" />
    <result column="receipts_interest" jdbcType="VARCHAR" property="receiptsInterest" />
    <result column="receipts_interest_penalty" jdbcType="VARCHAR" property="receiptsInterestPenalty" />
    <result column="payment_order_count" jdbcType="VARCHAR" property="paymentOrderCount" />
    <result column="payment_loan_amount" jdbcType="VARCHAR" property="paymentLoanAmount" />
    <result column="payment_principal" jdbcType="VARCHAR" property="paymentPrincipal" />
    <result column="payment_credit_cost" jdbcType="VARCHAR" property="paymentCreditCost" />
    <result column="balance_amount" jdbcType="VARCHAR" property="balanceAmount" />
    <result column="delay_number" jdbcType="VARCHAR" property="delayNumber" />
    <result column="delay_fee" jdbcType="VARCHAR" property="delayFee" />
    <result column="cancel_order_count" jdbcType="VARCHAR" property="cancelOrderCount" />
    <result column="cancel_loan_amount" jdbcType="VARCHAR" property="cancelLoanAmount" />
    <result column="cancel_principal" jdbcType="VARCHAR" property="cancelPrincipal" />
    <result column="cancel_credit_cost" jdbcType="VARCHAR" property="cancelCreditCost" />
    <result column="other_amount" jdbcType="VARCHAR" property="otherAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, date, payable_order_count, payable_loan_amount, payable_principal, 
    payable_credit_cost, receipts_order_count, receipts_principal, receipts_credit_cost, 
    receipts_interest, receipts_interest_penalty, payment_order_count, payment_loan_amount, 
    payment_principal, payment_credit_cost, balance_amount, delay_number, delay_fee, 
    cancel_order_count, cancel_loan_amount, cancel_principal, cancel_credit_cost, other_amount
  </sql>
  <select id="selectByExample" parameterType="com.zml.demo.producer.dao.model.SFinancialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_financial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_financial
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_financial
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zml.demo.producer.dao.model.SFinancialExample">
    delete from s_financial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    insert into s_financial (id, create_time, update_time, 
      date, payable_order_count, payable_loan_amount, 
      payable_principal, payable_credit_cost, receipts_order_count, 
      receipts_principal, receipts_credit_cost, 
      receipts_interest, receipts_interest_penalty, 
      payment_order_count, payment_loan_amount, payment_principal, 
      payment_credit_cost, balance_amount, delay_number, 
      delay_fee, cancel_order_count, cancel_loan_amount, 
      cancel_principal, cancel_credit_cost, other_amount
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{date,jdbcType=VARCHAR}, #{payableOrderCount,jdbcType=VARCHAR}, #{payableLoanAmount,jdbcType=VARCHAR}, 
      #{payablePrincipal,jdbcType=VARCHAR}, #{payableCreditCost,jdbcType=VARCHAR}, #{receiptsOrderCount,jdbcType=VARCHAR}, 
      #{receiptsPrincipal,jdbcType=VARCHAR}, #{receiptsCreditCost,jdbcType=VARCHAR}, 
      #{receiptsInterest,jdbcType=VARCHAR}, #{receiptsInterestPenalty,jdbcType=VARCHAR}, 
      #{paymentOrderCount,jdbcType=VARCHAR}, #{paymentLoanAmount,jdbcType=VARCHAR}, #{paymentPrincipal,jdbcType=VARCHAR}, 
      #{paymentCreditCost,jdbcType=VARCHAR}, #{balanceAmount,jdbcType=VARCHAR}, #{delayNumber,jdbcType=VARCHAR}, 
      #{delayFee,jdbcType=VARCHAR}, #{cancelOrderCount,jdbcType=VARCHAR}, #{cancelLoanAmount,jdbcType=VARCHAR}, 
      #{cancelPrincipal,jdbcType=VARCHAR}, #{cancelCreditCost,jdbcType=VARCHAR}, #{otherAmount,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    insert into s_financial
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="payableOrderCount != null">
        payable_order_count,
      </if>
      <if test="payableLoanAmount != null">
        payable_loan_amount,
      </if>
      <if test="payablePrincipal != null">
        payable_principal,
      </if>
      <if test="payableCreditCost != null">
        payable_credit_cost,
      </if>
      <if test="receiptsOrderCount != null">
        receipts_order_count,
      </if>
      <if test="receiptsPrincipal != null">
        receipts_principal,
      </if>
      <if test="receiptsCreditCost != null">
        receipts_credit_cost,
      </if>
      <if test="receiptsInterest != null">
        receipts_interest,
      </if>
      <if test="receiptsInterestPenalty != null">
        receipts_interest_penalty,
      </if>
      <if test="paymentOrderCount != null">
        payment_order_count,
      </if>
      <if test="paymentLoanAmount != null">
        payment_loan_amount,
      </if>
      <if test="paymentPrincipal != null">
        payment_principal,
      </if>
      <if test="paymentCreditCost != null">
        payment_credit_cost,
      </if>
      <if test="balanceAmount != null">
        balance_amount,
      </if>
      <if test="delayNumber != null">
        delay_number,
      </if>
      <if test="delayFee != null">
        delay_fee,
      </if>
      <if test="cancelOrderCount != null">
        cancel_order_count,
      </if>
      <if test="cancelLoanAmount != null">
        cancel_loan_amount,
      </if>
      <if test="cancelPrincipal != null">
        cancel_principal,
      </if>
      <if test="cancelCreditCost != null">
        cancel_credit_cost,
      </if>
      <if test="otherAmount != null">
        other_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="payableOrderCount != null">
        #{payableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="payableLoanAmount != null">
        #{payableLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="payablePrincipal != null">
        #{payablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="payableCreditCost != null">
        #{payableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsOrderCount != null">
        #{receiptsOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="receiptsPrincipal != null">
        #{receiptsPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="receiptsCreditCost != null">
        #{receiptsCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterest != null">
        #{receiptsInterest,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterestPenalty != null">
        #{receiptsInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderCount != null">
        #{paymentOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="paymentLoanAmount != null">
        #{paymentLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="paymentPrincipal != null">
        #{paymentPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="paymentCreditCost != null">
        #{paymentCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="balanceAmount != null">
        #{balanceAmount,jdbcType=VARCHAR},
      </if>
      <if test="delayNumber != null">
        #{delayNumber,jdbcType=VARCHAR},
      </if>
      <if test="delayFee != null">
        #{delayFee,jdbcType=VARCHAR},
      </if>
      <if test="cancelOrderCount != null">
        #{cancelOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="cancelLoanAmount != null">
        #{cancelLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="cancelPrincipal != null">
        #{cancelPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="cancelCreditCost != null">
        #{cancelCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="otherAmount != null">
        #{otherAmount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zml.demo.producer.dao.model.SFinancialExample" resultType="java.lang.Long">
    select count(*) from s_financial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_financial
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.payableOrderCount != null">
        payable_order_count = #{record.payableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.payableLoanAmount != null">
        payable_loan_amount = #{record.payableLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.payablePrincipal != null">
        payable_principal = #{record.payablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.payableCreditCost != null">
        payable_credit_cost = #{record.payableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsOrderCount != null">
        receipts_order_count = #{record.receiptsOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsPrincipal != null">
        receipts_principal = #{record.receiptsPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsCreditCost != null">
        receipts_credit_cost = #{record.receiptsCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsInterest != null">
        receipts_interest = #{record.receiptsInterest,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsInterestPenalty != null">
        receipts_interest_penalty = #{record.receiptsInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentOrderCount != null">
        payment_order_count = #{record.paymentOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentLoanAmount != null">
        payment_loan_amount = #{record.paymentLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentPrincipal != null">
        payment_principal = #{record.paymentPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCreditCost != null">
        payment_credit_cost = #{record.paymentCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.balanceAmount != null">
        balance_amount = #{record.balanceAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.delayNumber != null">
        delay_number = #{record.delayNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.delayFee != null">
        delay_fee = #{record.delayFee,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelOrderCount != null">
        cancel_order_count = #{record.cancelOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelLoanAmount != null">
        cancel_loan_amount = #{record.cancelLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelPrincipal != null">
        cancel_principal = #{record.cancelPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelCreditCost != null">
        cancel_credit_cost = #{record.cancelCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="record.otherAmount != null">
        other_amount = #{record.otherAmount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_financial
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      date = #{record.date,jdbcType=VARCHAR},
      payable_order_count = #{record.payableOrderCount,jdbcType=VARCHAR},
      payable_loan_amount = #{record.payableLoanAmount,jdbcType=VARCHAR},
      payable_principal = #{record.payablePrincipal,jdbcType=VARCHAR},
      payable_credit_cost = #{record.payableCreditCost,jdbcType=VARCHAR},
      receipts_order_count = #{record.receiptsOrderCount,jdbcType=VARCHAR},
      receipts_principal = #{record.receiptsPrincipal,jdbcType=VARCHAR},
      receipts_credit_cost = #{record.receiptsCreditCost,jdbcType=VARCHAR},
      receipts_interest = #{record.receiptsInterest,jdbcType=VARCHAR},
      receipts_interest_penalty = #{record.receiptsInterestPenalty,jdbcType=VARCHAR},
      payment_order_count = #{record.paymentOrderCount,jdbcType=VARCHAR},
      payment_loan_amount = #{record.paymentLoanAmount,jdbcType=VARCHAR},
      payment_principal = #{record.paymentPrincipal,jdbcType=VARCHAR},
      payment_credit_cost = #{record.paymentCreditCost,jdbcType=VARCHAR},
      balance_amount = #{record.balanceAmount,jdbcType=VARCHAR},
      delay_number = #{record.delayNumber,jdbcType=VARCHAR},
      delay_fee = #{record.delayFee,jdbcType=VARCHAR},
      cancel_order_count = #{record.cancelOrderCount,jdbcType=VARCHAR},
      cancel_loan_amount = #{record.cancelLoanAmount,jdbcType=VARCHAR},
      cancel_principal = #{record.cancelPrincipal,jdbcType=VARCHAR},
      cancel_credit_cost = #{record.cancelCreditCost,jdbcType=VARCHAR},
      other_amount = #{record.otherAmount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    update s_financial
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="payableOrderCount != null">
        payable_order_count = #{payableOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="payableLoanAmount != null">
        payable_loan_amount = #{payableLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="payablePrincipal != null">
        payable_principal = #{payablePrincipal,jdbcType=VARCHAR},
      </if>
      <if test="payableCreditCost != null">
        payable_credit_cost = #{payableCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsOrderCount != null">
        receipts_order_count = #{receiptsOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="receiptsPrincipal != null">
        receipts_principal = #{receiptsPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="receiptsCreditCost != null">
        receipts_credit_cost = #{receiptsCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterest != null">
        receipts_interest = #{receiptsInterest,jdbcType=VARCHAR},
      </if>
      <if test="receiptsInterestPenalty != null">
        receipts_interest_penalty = #{receiptsInterestPenalty,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderCount != null">
        payment_order_count = #{paymentOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="paymentLoanAmount != null">
        payment_loan_amount = #{paymentLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="paymentPrincipal != null">
        payment_principal = #{paymentPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="paymentCreditCost != null">
        payment_credit_cost = #{paymentCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="balanceAmount != null">
        balance_amount = #{balanceAmount,jdbcType=VARCHAR},
      </if>
      <if test="delayNumber != null">
        delay_number = #{delayNumber,jdbcType=VARCHAR},
      </if>
      <if test="delayFee != null">
        delay_fee = #{delayFee,jdbcType=VARCHAR},
      </if>
      <if test="cancelOrderCount != null">
        cancel_order_count = #{cancelOrderCount,jdbcType=VARCHAR},
      </if>
      <if test="cancelLoanAmount != null">
        cancel_loan_amount = #{cancelLoanAmount,jdbcType=VARCHAR},
      </if>
      <if test="cancelPrincipal != null">
        cancel_principal = #{cancelPrincipal,jdbcType=VARCHAR},
      </if>
      <if test="cancelCreditCost != null">
        cancel_credit_cost = #{cancelCreditCost,jdbcType=VARCHAR},
      </if>
      <if test="otherAmount != null">
        other_amount = #{otherAmount,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zml.demo.producer.dao.model.SFinancial">
    update s_financial
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      date = #{date,jdbcType=VARCHAR},
      payable_order_count = #{payableOrderCount,jdbcType=VARCHAR},
      payable_loan_amount = #{payableLoanAmount,jdbcType=VARCHAR},
      payable_principal = #{payablePrincipal,jdbcType=VARCHAR},
      payable_credit_cost = #{payableCreditCost,jdbcType=VARCHAR},
      receipts_order_count = #{receiptsOrderCount,jdbcType=VARCHAR},
      receipts_principal = #{receiptsPrincipal,jdbcType=VARCHAR},
      receipts_credit_cost = #{receiptsCreditCost,jdbcType=VARCHAR},
      receipts_interest = #{receiptsInterest,jdbcType=VARCHAR},
      receipts_interest_penalty = #{receiptsInterestPenalty,jdbcType=VARCHAR},
      payment_order_count = #{paymentOrderCount,jdbcType=VARCHAR},
      payment_loan_amount = #{paymentLoanAmount,jdbcType=VARCHAR},
      payment_principal = #{paymentPrincipal,jdbcType=VARCHAR},
      payment_credit_cost = #{paymentCreditCost,jdbcType=VARCHAR},
      balance_amount = #{balanceAmount,jdbcType=VARCHAR},
      delay_number = #{delayNumber,jdbcType=VARCHAR},
      delay_fee = #{delayFee,jdbcType=VARCHAR},
      cancel_order_count = #{cancelOrderCount,jdbcType=VARCHAR},
      cancel_loan_amount = #{cancelLoanAmount,jdbcType=VARCHAR},
      cancel_principal = #{cancelPrincipal,jdbcType=VARCHAR},
      cancel_credit_cost = #{cancelCreditCost,jdbcType=VARCHAR},
      other_amount = #{otherAmount,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>