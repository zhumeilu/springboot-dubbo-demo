<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zml.demo.producer.dao.mapper.OUrgeMapper">
  <resultMap id="BaseResultMap" type="com.zml.demo.producer.dao.model.OUrge">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="urge_id" jdbcType="VARCHAR" property="urgeId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="bank_card_id" jdbcType="INTEGER" property="bankCardId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="loan_amount" jdbcType="DECIMAL" property="loanAmount" />
    <result column="interest_amount" jdbcType="DECIMAL" property="interestAmount" />
    <result column="overdue_amount" jdbcType="DECIMAL" property="overdueAmount" />
    <result column="loan_days" jdbcType="INTEGER" property="loanDays" />
    <result column="withdraw_time" jdbcType="TIMESTAMP" property="withdrawTime" />
    <result column="should_return_date" jdbcType="DATE" property="shouldReturnDate" />
    <result column="stage_change_time" jdbcType="TIMESTAMP" property="stageChangeTime" />
    <result column="operator_change_time" jdbcType="TIMESTAMP" property="operatorChangeTime" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="is_lock" jdbcType="BIT" property="isLock" />
    <result column="reduction_amount" jdbcType="DECIMAL" property="reductionAmount" />
    <result column="repaid_amount" jdbcType="DECIMAL" property="repaidAmount" />
    <result column="repay_time" jdbcType="TIMESTAMP" property="repayTime" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="overdue_ratio" jdbcType="DECIMAL" property="overdueRatio" />
    <result column="overdue_max_ratio" jdbcType="DECIMAL" property="overdueMaxRatio" />
    <result column="interest_ratio" jdbcType="DECIMAL" property="interestRatio" />
    <result column="overdue_days" jdbcType="INTEGER" property="overdueDays" />
    <result column="urge_operator" jdbcType="VARCHAR" property="urgeOperator" />
    <result column="last_follow_time" jdbcType="TIMESTAMP" property="lastFollowTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="label_id" jdbcType="INTEGER" property="labelId" />
    <result column="allot_status" jdbcType="BIT" property="allotStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, urge_id, order_id, order_time, bank_card_id, user_id, 
    area_code, mobile, loan_amount, interest_amount, overdue_amount, loan_days, withdraw_time, 
    should_return_date, stage_change_time, operator_change_time, stage, is_lock, reduction_amount, 
    repaid_amount, repay_time, product_id, overdue_ratio, overdue_max_ratio, interest_ratio, 
    overdue_days, urge_operator, last_follow_time, operator, status, label_id, allot_status
  </sql>
  <select id="selectByExample" parameterType="com.zml.demo.producer.dao.model.OUrgeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from o_urge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from o_urge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from o_urge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zml.demo.producer.dao.model.OUrgeExample">
    delete from o_urge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zml.demo.producer.dao.model.OUrge">
    insert into o_urge (id, create_time, update_time, 
      urge_id, order_id, order_time, 
      bank_card_id, user_id, area_code, 
      mobile, loan_amount, interest_amount, 
      overdue_amount, loan_days, withdraw_time, 
      should_return_date, stage_change_time, operator_change_time, 
      stage, is_lock, reduction_amount, 
      repaid_amount, repay_time, product_id, 
      overdue_ratio, overdue_max_ratio, interest_ratio, 
      overdue_days, urge_operator, last_follow_time, 
      operator, status, label_id, 
      allot_status)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{urgeId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{bankCardId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{loanAmount,jdbcType=DECIMAL}, #{interestAmount,jdbcType=DECIMAL}, 
      #{overdueAmount,jdbcType=DECIMAL}, #{loanDays,jdbcType=INTEGER}, #{withdrawTime,jdbcType=TIMESTAMP}, 
      #{shouldReturnDate,jdbcType=DATE}, #{stageChangeTime,jdbcType=TIMESTAMP}, #{operatorChangeTime,jdbcType=TIMESTAMP}, 
      #{stage,jdbcType=VARCHAR}, #{isLock,jdbcType=BIT}, #{reductionAmount,jdbcType=DECIMAL}, 
      #{repaidAmount,jdbcType=DECIMAL}, #{repayTime,jdbcType=TIMESTAMP}, #{productId,jdbcType=INTEGER}, 
      #{overdueRatio,jdbcType=DECIMAL}, #{overdueMaxRatio,jdbcType=DECIMAL}, #{interestRatio,jdbcType=DECIMAL}, 
      #{overdueDays,jdbcType=INTEGER}, #{urgeOperator,jdbcType=VARCHAR}, #{lastFollowTime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{labelId,jdbcType=INTEGER}, 
      #{allotStatus,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.zml.demo.producer.dao.model.OUrge">
    insert into o_urge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="urgeId != null">
        urge_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="bankCardId != null">
        bank_card_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="loanAmount != null">
        loan_amount,
      </if>
      <if test="interestAmount != null">
        interest_amount,
      </if>
      <if test="overdueAmount != null">
        overdue_amount,
      </if>
      <if test="loanDays != null">
        loan_days,
      </if>
      <if test="withdrawTime != null">
        withdraw_time,
      </if>
      <if test="shouldReturnDate != null">
        should_return_date,
      </if>
      <if test="stageChangeTime != null">
        stage_change_time,
      </if>
      <if test="operatorChangeTime != null">
        operator_change_time,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="isLock != null">
        is_lock,
      </if>
      <if test="reductionAmount != null">
        reduction_amount,
      </if>
      <if test="repaidAmount != null">
        repaid_amount,
      </if>
      <if test="repayTime != null">
        repay_time,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="overdueRatio != null">
        overdue_ratio,
      </if>
      <if test="overdueMaxRatio != null">
        overdue_max_ratio,
      </if>
      <if test="interestRatio != null">
        interest_ratio,
      </if>
      <if test="overdueDays != null">
        overdue_days,
      </if>
      <if test="urgeOperator != null">
        urge_operator,
      </if>
      <if test="lastFollowTime != null">
        last_follow_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="labelId != null">
        label_id,
      </if>
      <if test="allotStatus != null">
        allot_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="urgeId != null">
        #{urgeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bankCardId != null">
        #{bankCardId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="loanAmount != null">
        #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="interestAmount != null">
        #{interestAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueAmount != null">
        #{overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="loanDays != null">
        #{loanDays,jdbcType=INTEGER},
      </if>
      <if test="withdrawTime != null">
        #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shouldReturnDate != null">
        #{shouldReturnDate,jdbcType=DATE},
      </if>
      <if test="stageChangeTime != null">
        #{stageChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorChangeTime != null">
        #{operatorChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        #{isLock,jdbcType=BIT},
      </if>
      <if test="reductionAmount != null">
        #{reductionAmount,jdbcType=DECIMAL},
      </if>
      <if test="repaidAmount != null">
        #{repaidAmount,jdbcType=DECIMAL},
      </if>
      <if test="repayTime != null">
        #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="overdueRatio != null">
        #{overdueRatio,jdbcType=DECIMAL},
      </if>
      <if test="overdueMaxRatio != null">
        #{overdueMaxRatio,jdbcType=DECIMAL},
      </if>
      <if test="interestRatio != null">
        #{interestRatio,jdbcType=DECIMAL},
      </if>
      <if test="overdueDays != null">
        #{overdueDays,jdbcType=INTEGER},
      </if>
      <if test="urgeOperator != null">
        #{urgeOperator,jdbcType=VARCHAR},
      </if>
      <if test="lastFollowTime != null">
        #{lastFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="labelId != null">
        #{labelId,jdbcType=INTEGER},
      </if>
      <if test="allotStatus != null">
        #{allotStatus,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zml.demo.producer.dao.model.OUrgeExample" resultType="java.lang.Long">
    select count(*) from o_urge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update o_urge
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.urgeId != null">
        urge_id = #{record.urgeId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bankCardId != null">
        bank_card_id = #{record.bankCardId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null">
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.loanAmount != null">
        loan_amount = #{record.loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.interestAmount != null">
        interest_amount = #{record.interestAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueAmount != null">
        overdue_amount = #{record.overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.loanDays != null">
        loan_days = #{record.loanDays,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawTime != null">
        withdraw_time = #{record.withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shouldReturnDate != null">
        should_return_date = #{record.shouldReturnDate,jdbcType=DATE},
      </if>
      <if test="record.stageChangeTime != null">
        stage_change_time = #{record.stageChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorChangeTime != null">
        operator_change_time = #{record.operatorChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stage != null">
        stage = #{record.stage,jdbcType=VARCHAR},
      </if>
      <if test="record.isLock != null">
        is_lock = #{record.isLock,jdbcType=BIT},
      </if>
      <if test="record.reductionAmount != null">
        reduction_amount = #{record.reductionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.repaidAmount != null">
        repaid_amount = #{record.repaidAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.repayTime != null">
        repay_time = #{record.repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.overdueRatio != null">
        overdue_ratio = #{record.overdueRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueMaxRatio != null">
        overdue_max_ratio = #{record.overdueMaxRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.interestRatio != null">
        interest_ratio = #{record.interestRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueDays != null">
        overdue_days = #{record.overdueDays,jdbcType=INTEGER},
      </if>
      <if test="record.urgeOperator != null">
        urge_operator = #{record.urgeOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.lastFollowTime != null">
        last_follow_time = #{record.lastFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.labelId != null">
        label_id = #{record.labelId,jdbcType=INTEGER},
      </if>
      <if test="record.allotStatus != null">
        allot_status = #{record.allotStatus,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update o_urge
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      urge_id = #{record.urgeId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      bank_card_id = #{record.bankCardId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      area_code = #{record.areaCode,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      loan_amount = #{record.loanAmount,jdbcType=DECIMAL},
      interest_amount = #{record.interestAmount,jdbcType=DECIMAL},
      overdue_amount = #{record.overdueAmount,jdbcType=DECIMAL},
      loan_days = #{record.loanDays,jdbcType=INTEGER},
      withdraw_time = #{record.withdrawTime,jdbcType=TIMESTAMP},
      should_return_date = #{record.shouldReturnDate,jdbcType=DATE},
      stage_change_time = #{record.stageChangeTime,jdbcType=TIMESTAMP},
      operator_change_time = #{record.operatorChangeTime,jdbcType=TIMESTAMP},
      stage = #{record.stage,jdbcType=VARCHAR},
      is_lock = #{record.isLock,jdbcType=BIT},
      reduction_amount = #{record.reductionAmount,jdbcType=DECIMAL},
      repaid_amount = #{record.repaidAmount,jdbcType=DECIMAL},
      repay_time = #{record.repayTime,jdbcType=TIMESTAMP},
      product_id = #{record.productId,jdbcType=INTEGER},
      overdue_ratio = #{record.overdueRatio,jdbcType=DECIMAL},
      overdue_max_ratio = #{record.overdueMaxRatio,jdbcType=DECIMAL},
      interest_ratio = #{record.interestRatio,jdbcType=DECIMAL},
      overdue_days = #{record.overdueDays,jdbcType=INTEGER},
      urge_operator = #{record.urgeOperator,jdbcType=VARCHAR},
      last_follow_time = #{record.lastFollowTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      label_id = #{record.labelId,jdbcType=INTEGER},
      allot_status = #{record.allotStatus,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zml.demo.producer.dao.model.OUrge">
    update o_urge
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="urgeId != null">
        urge_id = #{urgeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bankCardId != null">
        bank_card_id = #{bankCardId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="loanAmount != null">
        loan_amount = #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="interestAmount != null">
        interest_amount = #{interestAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueAmount != null">
        overdue_amount = #{overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="loanDays != null">
        loan_days = #{loanDays,jdbcType=INTEGER},
      </if>
      <if test="withdrawTime != null">
        withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shouldReturnDate != null">
        should_return_date = #{shouldReturnDate,jdbcType=DATE},
      </if>
      <if test="stageChangeTime != null">
        stage_change_time = #{stageChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorChangeTime != null">
        operator_change_time = #{operatorChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        is_lock = #{isLock,jdbcType=BIT},
      </if>
      <if test="reductionAmount != null">
        reduction_amount = #{reductionAmount,jdbcType=DECIMAL},
      </if>
      <if test="repaidAmount != null">
        repaid_amount = #{repaidAmount,jdbcType=DECIMAL},
      </if>
      <if test="repayTime != null">
        repay_time = #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="overdueRatio != null">
        overdue_ratio = #{overdueRatio,jdbcType=DECIMAL},
      </if>
      <if test="overdueMaxRatio != null">
        overdue_max_ratio = #{overdueMaxRatio,jdbcType=DECIMAL},
      </if>
      <if test="interestRatio != null">
        interest_ratio = #{interestRatio,jdbcType=DECIMAL},
      </if>
      <if test="overdueDays != null">
        overdue_days = #{overdueDays,jdbcType=INTEGER},
      </if>
      <if test="urgeOperator != null">
        urge_operator = #{urgeOperator,jdbcType=VARCHAR},
      </if>
      <if test="lastFollowTime != null">
        last_follow_time = #{lastFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="labelId != null">
        label_id = #{labelId,jdbcType=INTEGER},
      </if>
      <if test="allotStatus != null">
        allot_status = #{allotStatus,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zml.demo.producer.dao.model.OUrge">
    update o_urge
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      urge_id = #{urgeId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      bank_card_id = #{bankCardId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      area_code = #{areaCode,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      loan_amount = #{loanAmount,jdbcType=DECIMAL},
      interest_amount = #{interestAmount,jdbcType=DECIMAL},
      overdue_amount = #{overdueAmount,jdbcType=DECIMAL},
      loan_days = #{loanDays,jdbcType=INTEGER},
      withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      should_return_date = #{shouldReturnDate,jdbcType=DATE},
      stage_change_time = #{stageChangeTime,jdbcType=TIMESTAMP},
      operator_change_time = #{operatorChangeTime,jdbcType=TIMESTAMP},
      stage = #{stage,jdbcType=VARCHAR},
      is_lock = #{isLock,jdbcType=BIT},
      reduction_amount = #{reductionAmount,jdbcType=DECIMAL},
      repaid_amount = #{repaidAmount,jdbcType=DECIMAL},
      repay_time = #{repayTime,jdbcType=TIMESTAMP},
      product_id = #{productId,jdbcType=INTEGER},
      overdue_ratio = #{overdueRatio,jdbcType=DECIMAL},
      overdue_max_ratio = #{overdueMaxRatio,jdbcType=DECIMAL},
      interest_ratio = #{interestRatio,jdbcType=DECIMAL},
      overdue_days = #{overdueDays,jdbcType=INTEGER},
      urge_operator = #{urgeOperator,jdbcType=VARCHAR},
      last_follow_time = #{lastFollowTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      label_id = #{labelId,jdbcType=INTEGER},
      allot_status = #{allotStatus,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>